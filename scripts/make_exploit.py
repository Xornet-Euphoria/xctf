from string import Template
from os import environ
from argparse import ArgumentParser
from xlog import XLog
from xpwn import analyze_libc


def craete_parser():
    parser = ArgumentParser()
    parser.add_argument(
        "-e", "--elf", help="ELF path (required)", required=True)
    parser.add_argument(
        "-l", "--libc", help="libc path (required)", required=True)
    parser.add_argument("--host", help="target address")
    parser.add_argument("-p", "--port", help="target port")

    return parser


if __name__ == "__main__":
    logger = XLog("MXPLT")
    parser = craete_parser()
    args = parser.parse_args()
    elf = args.elf

    libc = args.libc
    libc_dict = analyze_libc(libc)
    if libc_dict is None:
        main_arena = None
        one_gadgets = []
    else:
        main_arena = libc_dict["main_arena.top"]
        one_gadgets = libc_dict["gadgets"]

    target = args.host
    if target is None:
        target = ""
    port = args.port
    """
        # todo
        1. argparseで引数を取る -> Done
        2. one gadget(subprocess) -> 結果が上手く取れないので保留
        3. checksec -> pwntoolsのを使うかは悩みどころさん
        4. ROP Gadget(ropper) -> めんどー
        5. libc解析(one gadget, main_arena等) -> 2.27, 2.31 Done
    """
    try:
        template_dir = environ["TEMPLATE_DIR"]
    except:
        logger.error("please set `TEMPLATE_DIR` environment variable")
        exit(0)

    template_path = template_dir + "/exploit_template"  # テンプレート置き場をどうするか
    exploit_path = "./exploit.py"
    try:
        f = open(template_path)
    except FileNotFoundError:
        logger.error("please make exploit template: %s" % template_path)
        exit(0)

    template_str = f.read()
    f.close()
    t = Template(template_str)
    substituted = t.substitute(elf=elf, libc=libc, main_arena_top=main_arena,
                               one_gadgets=one_gadgets, target=target, port=port)

    f = open(exploit_path, "w")
    f.write(substituted)
    f.close()

    logger.info("done!!")
